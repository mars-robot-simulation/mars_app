diff --git a/src/MARS.cpp b/src/MARS.cpp
index d55a208..c889f5e 100644
--- a/src/MARS.cpp
+++ b/src/MARS.cpp
@@ -39,7 +39,7 @@ namespace mars
     namespace app
     {
 
-        mars::interfaces::ControlCenter* MARS::control = NULL;
+        mars::interfaces::ControlCenter* MARS::control = nullptr;
         bool MARS::quit = false;
 
         void exit_main(int signal)
@@ -71,11 +71,11 @@ namespace mars
 
         MARS::MARS() : configDir(DEFAULT_CONFIG_DIR),
                        libManager(new lib_manager::LibManager()),
-                       marsGui(NULL), ownLibManager(true),
+                       marsGui(nullptr), ownLibManager(true),
                        argConfDir(false) {
             needQApp = true;
             noGUI = false;
-            graphicsTimer = NULL;
+            graphicsTimer = nullptr;
             initialized = false;
 #ifdef WIN32
             // request a scheduler of 1ms
@@ -89,12 +89,12 @@ namespace mars
 
         MARS::MARS(lib_manager::LibManager *theManager) : configDir(DEFAULT_CONFIG_DIR),
                                                           libManager(theManager),
-                                                          marsGui(NULL), ownLibManager(false),
+                                                          marsGui(nullptr), ownLibManager(false),
                                                           argConfDir(false)
         {
             needQApp = true;
             noGUI = false;
-            graphicsTimer = NULL;
+            graphicsTimer = nullptr;
             initialized = false;
 #ifdef WIN32
             // request a scheduler of 1ms
@@ -208,15 +208,16 @@ namespace mars
                 // loading errors will be silent for the following optional libraries
                 if(!noGUI)
                 {
-                    // libManager->loadLibrary("log_console", NULL, true);
-                    // libManager->loadLibrary("connexion_plugin", NULL, true);
-                    libManager->loadLibrary("data_broker_gui", NULL, true);
-                    libManager->loadLibrary("cfg_manager_gui", NULL, true);
-                    libManager->loadLibrary("lib_manager_gui", NULL, true);
-                    // libManager->loadLibrary("SkyDomePlugin", NULL, true);
-                    // libManager->loadLibrary("CameraGUI", NULL, true);
-                    // libManager->loadLibrary("PythonMars", NULL, true);
-                    // libManager->loadLibrary("data_broker_plotter2", NULL, true);
+                    // libManager->loadLibrary("log_console", nullptr, true);
+                    // libManager->loadLibrary("connexion_plugin", nullptr, true);
+                    libManager->loadLibrary("data_broker_gui", nullptr, true);
+                    libManager->loadLibrary("cfg_manager_gui", nullptr, true);
+                    libManager->loadLibrary("lib_manager_gui", nullptr, true);
+                    // libManager->loadLibrary("SkyDomePlugin", nullptr, true);
+                    // libManager->loadLibrary("CameraGUI", nullptr, true);
+                    // libManager->loadLibrary("PythonMars", nullptr, true);
+                    // libManager->loadLibrary("data_broker_plotter2", nullptr, true);
+                    libManager->loadLibrary("envire_entity_view", nullptr, true);
                 }
                 std::cout << "load envire plugins" << std::endl;
                 libManager->loadLibrary("envire_mars_ode_physics");
@@ -224,7 +225,7 @@ namespace mars
                 libManager->loadLibrary("envire_mars_motors");
                 libManager->loadLibrary("envire_mars_sensors");
                 libManager->loadLibrary("envire_mars_graphics");
-                libManager->loadLibrary("mars_scene_loader", NULL, true);
+                libManager->loadLibrary("mars_scene_loader", nullptr, true);
             }
         }
 
@@ -267,7 +268,7 @@ namespace mars
             }
 
 #ifndef NO_GUI
-            mars::main_gui::MainGUI *mainGui = NULL;
+            mars::main_gui::MainGUI *mainGui = nullptr;
             mainGui = libManager->getLibraryAs<mars::main_gui::MainGUI>("main_gui", true);
 
             // TODO: added graph visualizer for 3d view, it should be move later in other lib/plugin
@@ -278,7 +279,7 @@ namespace mars
             // graphVisualizer->enablePlugin("smurf::Collidable", false);
             // mainGui->mainWindow_p()->setCentralWidget(graphVisualizer.get());
 
-            mars::interfaces::GraphicsManagerInterface *marsGraphics = NULL;
+            mars::interfaces::GraphicsManagerInterface *marsGraphics = nullptr;
             marsGraphics = libManager->getLibraryAs<mars::interfaces::GraphicsManagerInterface>("mars_graphics", true);
             if(marsGraphics)
             {
@@ -286,7 +287,7 @@ namespace mars
                 //initialize graphicsFactory
                 if(mainGui)
                 {
-                    marsGraphics->initializeOSG(NULL);
+                    marsGraphics->initializeOSG(nullptr);
                     QWidget *widget = (QWidget*)marsGraphics->getQTWidget(1);
                     if (widget)
                     {
@@ -294,7 +295,7 @@ namespace mars
                     }
                 } else
                 {
-                    marsGraphics->initializeOSG(NULL, false);
+                    marsGraphics->initializeOSG(nullptr, false);
                 }
             }
 #endif
@@ -328,7 +329,7 @@ namespace mars
 #ifndef NO_GUI
             if(needQApp)
             {
-                graphicsTimer = new mars::app::GraphicsTimer(NULL,
+                graphicsTimer = new mars::app::GraphicsTimer(nullptr,
                                                              control->sim);
                 graphicsTimer->run();
             }
@@ -343,7 +344,7 @@ namespace mars
             int option_index = 0;
 
             int i;
-            char** argv_copy = NULL;
+            char** argv_copy = nullptr;
             unsigned int arg_len = 0;
 
             //remember how many arguments were already processed by getopt()
@@ -414,7 +415,7 @@ namespace mars
 
             //reset index to read arguments again in other libraries (mars_sim).
             optind = 1;
-            optarg = NULL;
+            optarg = nullptr;
 
             return;
         }
